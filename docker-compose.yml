version: '3.8'
services:
  mysqldb:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    networks:
      - springboot-microservices
  mypostgresdb:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    expose:
      - '5432'
    networks:
      - springboot-microservices
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    networks:
      - springboot-microservices
  ## Eureka Server
  discovery-server:
    image: discovery-server
    build: ./discovery-server
    container_name: discovery-server
    restart: on-failure
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - springboot-microservices

  api-gateway:
    image: api-gateway
    build: ./api-gateway
    container_name: api-gateway
    restart: on-failure
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
    networks:
      - springboot-microservices
  ## Product-Service Docker Compose Config
  product-service:
    build: ./product-service
    container_name: product-service
    image: product-service
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mypostgresdb
      - discovery-server
      - api-gateway
    networks:
      - springboot-microservices

  log-service:
    image: log-service
    container_name: log-service
    build: ./log-service
    restart: on-failure
    networks:
      - springboot-microservices
    depends_on:
      - mongo
      - discovery-server
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  user-service:
    image: user-service
    container_name: user-service
    build: ./user-service
    restart: on-failure
    networks:
      - springboot-microservices
    depends_on:
      - mysqldb
      - discovery-server
      - api-gateway
    volumes:
      - .m2:/root/.m2
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    stdin_open: true
    tty: true

networks:
  springboot-microservices: